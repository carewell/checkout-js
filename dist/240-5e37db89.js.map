{"version":3,"file":"240-5e37db89.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/ui/icon/IconChevronUp.tsx","webpack://checkout/./packages/core/src/app/order/mapFromCustom.tsx","webpack://checkout/./packages/core/src/app/order/getOrderSummaryItemImage.tsx","webpack://checkout/./packages/core/src/app/order/mapFromDigital.tsx","webpack://checkout/./packages/core/src/app/order/mapFromGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/order/mapFromPhysical.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItem.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryItems.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryPrice.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySection.tsx","webpack://checkout/./packages/core/src/app/order/AutoshipDiscount.tsx","webpack://checkout/./packages/core/src/app/order/isOrderFee.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryDiscount.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummarySubtotals.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryTotal.tsx","webpack://checkout/./packages/core/src/app/order/getItemsCount.ts","webpack://checkout/./packages/core/src/app/order/removeBundledItems.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isSmallScreen.ts"],"sourcesContent":["import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronUp: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 8l-6 6 1.41 1.41L12 10.83l4.59 4.58L18 14z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronUp);\n","import { CustomItem } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromCustom(item: CustomItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        name: item.name,\n    };\n}\n\nexport default mapFromCustom;\n","import { DigitalItem, PhysicalItem } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nexport default function getOrderSummaryItemImage(item: DigitalItem | PhysicalItem): ReactNode {\n    if (!item.imageUrl) {\n        return;\n    }\n\n    return <img alt={item.name} data-test=\"cart-item-image\" src={item.imageUrl} />;\n}\n","import { DigitalItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemOption, OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromDigital(item: DigitalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        productOptions: [\n            ...(item.options || []).map((option) => ({\n                testId: 'cart-item-product-option',\n                content: `${option.name} ${option.value}`,\n            })),\n            getDigitalItemDescription(item),\n        ],\n    };\n}\n\nfunction getDigitalItemDescription(item: DigitalItem): OrderSummaryItemOption {\n    if (!item.downloadPageUrl) {\n        return {\n            testId: 'cart-item-digital-product',\n            content: <TranslatedString id=\"cart.digital_item_text\" />,\n        };\n    }\n\n    return {\n        testId: 'cart-item-digital-product-download',\n        content: (\n            <a href={item.downloadPageUrl} rel=\"noopener noreferrer\" target=\"_blank\">\n                <TranslatedString id=\"cart.downloads_action\" />\n            </a>\n        ),\n    };\n}\n\nexport default mapFromDigital;\n","import { GiftCertificateItem } from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { IconGiftCertificate } from '../ui/icon';\n\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromGiftCertificate(item: GiftCertificateItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: 1,\n        amount: item.amount,\n        name: item.name,\n        image: (\n            <span className=\"productImage-giftCertificate\" data-test=\"cart-item-gift-certificate\">\n                <IconGiftCertificate />\n            </span>\n        ),\n    };\n}\n\nexport default mapFromGiftCertificate;\n","import { PhysicalItem } from '@bigcommerce/checkout-sdk';\n\nimport getOrderSummaryItemImage from './getOrderSummaryItemImage';\nimport { OrderSummaryItemProps } from './OrderSummaryItem';\n\nfunction mapFromPhysical(item: PhysicalItem): OrderSummaryItemProps {\n    return {\n        id: item.id,\n        quantity: item.quantity,\n        amount: item.extendedComparisonPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        name: item.name,\n        image: getOrderSummaryItemImage(item),\n        description: item.giftWrapping ? item.giftWrapping.name : undefined,\n        productOptions: (item.options || []).map((option) => ({\n            testId: 'cart-item-product-option',\n            content: `${option.name} ${option.value}`,\n        })),\n    };\n}\n\nexport default mapFromPhysical;\n","import classNames from 'classnames';\nimport { isNumber } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryItemProps {\n    id: string | number;\n    amount: number;\n    quantity: number;\n    name: string;\n    amountAfterDiscount?: number;\n    image?: ReactNode;\n    description?: ReactNode;\n    productOptions?: OrderSummaryItemOption[];\n}\n\nexport interface OrderSummaryItemOption {\n    testId: string;\n    content: ReactNode;\n}\n\nconst OrderSummaryItem: FunctionComponent<OrderSummaryItemProps> = ({\n    amount,\n    amountAfterDiscount,\n    image,\n    name,\n    productOptions,\n    quantity,\n    description,\n}) => (\n    <div className=\"product\" data-test=\"cart-item\">\n        <figure className=\"product-column product-figure\">{image}</figure>\n\n        <div className=\"product-column product-body\">\n            <h4\n                className=\"product-title optimizedCheckout-contentPrimary\"\n                data-test=\"cart-item-product-title\"\n            >\n                {`${quantity} x ${name}`}\n            </h4>\n            {productOptions && productOptions.length > 0 && (\n                <ul\n                    className=\"product-options optimizedCheckout-contentSecondary\"\n                    data-test=\"cart-item-product-options\"\n                >\n                    {productOptions.map((option, index) => (\n                        <li className=\"product-option\" data-test={option.testId} key={index}>\n                            {option.content}\n                        </li>\n                    ))}\n                </ul>\n            )}\n            {description && (\n                <div\n                    className=\"product-description optimizedCheckout-contentSecondary\"\n                    data-test=\"cart-item-product-description\"\n                >\n                    {description}\n                </div>\n            )}\n        </div>\n\n        <div className=\"product-column product-actions\">\n            <div\n                className={classNames('product-price', 'optimizedCheckout-contentPrimary', {\n                    'product-price--beforeDiscount':\n                        isNumber(amountAfterDiscount) && amountAfterDiscount !== amount,\n                })}\n                data-test=\"cart-item-product-price\"\n            >\n                <ShopperCurrency amount={amount} />\n            </div>\n\n            {isNumber(amountAfterDiscount) && amountAfterDiscount !== amount && (\n                <div className=\"product-price\" data-test=\"cart-item-product-price--afterDiscount\">\n                    <ShopperCurrency amount={amountAfterDiscount} />\n                </div>\n            )}\n        </div>\n    </div>\n);\n\nexport default memo(OrderSummaryItem);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown, IconChevronUp } from '../ui/icon';\nimport { isSmallScreen } from '../ui/responsive';\n\nimport getItemsCount from './getItemsCount';\nimport mapFromCustom from './mapFromCustom';\nimport mapFromDigital from './mapFromDigital';\nimport mapFromGiftCertificate from './mapFromGiftCertificate';\nimport mapFromPhysical from './mapFromPhysical';\nimport OrderSummaryItem from './OrderSummaryItem';\n\nconst COLLAPSED_ITEMS_LIMIT = 4;\nconst COLLAPSED_ITEMS_LIMIT_SMALL_SCREEN = 3;\n\nexport interface OrderSummaryItemsProps {\n    displayLineItemsCount: boolean;\n    items: LineItemMap;\n}\n\ninterface OrderSummaryItemsState {\n    isExpanded: boolean;\n    collapsedLimit: number;\n}\n\nclass OrderSummaryItems extends React.Component<OrderSummaryItemsProps, OrderSummaryItemsState> {\n    constructor(props: OrderSummaryItemsProps) {\n        super(props);\n\n        this.state = {\n            isExpanded: false,\n            collapsedLimit: this.getCollapsedLimit(),\n        };\n    }\n\n    render(): ReactNode {\n        const { displayLineItemsCount = true, items } = this.props;\n        const { collapsedLimit, isExpanded } = this.state;\n\n        return (\n            <>\n                {displayLineItemsCount && <h3\n                    className=\"cart-section-heading optimizedCheckout-contentPrimary\"\n                    data-test=\"cart-count-total\"\n                >\n                    <TranslatedString\n                        data={{ count: getItemsCount(items) }}\n                        id=\"cart.item_count_text\"\n                    />\n                </h3>}\n\n                <ul aria-live=\"polite\" className=\"productList\">\n                    {[\n                        ...items.physicalItems\n                            .slice()\n                            .sort((item) => item.variantId)\n                            .map(mapFromPhysical),\n                        ...items.giftCertificates.slice().map(mapFromGiftCertificate),\n                        ...items.digitalItems\n                            .slice()\n                            .sort((item) => item.variantId)\n                            .map(mapFromDigital),\n                        ...(items.customItems || []).map(mapFromCustom),\n                    ]\n                        .slice(0, isExpanded ? undefined : collapsedLimit)\n                        .map((summaryItemProps) => (\n                            <li className=\"productList-item is-visible\" key={summaryItemProps.id}>\n                                <OrderSummaryItem {...summaryItemProps} />\n                            </li>\n                        ))}\n                </ul>\n\n                {this.renderActions()}\n            </>\n        );\n    }\n\n    private getCollapsedLimit(): number {\n        return isSmallScreen() ? COLLAPSED_ITEMS_LIMIT_SMALL_SCREEN : COLLAPSED_ITEMS_LIMIT;\n    }\n\n    private renderActions(): ReactNode {\n        const { isExpanded } = this.state;\n\n        if (this.getLineItemCount() <= this.getCollapsedLimit()) {\n            return;\n        }\n\n        return (\n            <div className=\"cart-actions\">\n                <button\n                    className=\"button button--tertiary button--tiny optimizedCheckout-buttonSecondary\"\n                    onClick={this.handleToggle}\n                    type=\"button\"\n                >\n                    {isExpanded ? (\n                        <>\n                            <TranslatedString id=\"cart.see_less_action\" />\n                            <IconChevronUp />\n                        </>\n                    ) : (\n                        <>\n                            <TranslatedString id=\"cart.see_all_action\" />\n                            <IconChevronDown />\n                        </>\n                    )}\n                </button>\n            </div>\n        );\n    }\n\n    private getLineItemCount(): number {\n        const { items } = this.props;\n\n        return (\n            (items.customItems || []).length +\n            items.physicalItems.length +\n            items.digitalItems.length +\n            items.giftCertificates.length\n        );\n    }\n\n    private handleToggle: () => void = () => {\n        const { isExpanded } = this.state;\n\n        this.setState({ isExpanded: !isExpanded });\n    };\n}\n\nexport default OrderSummaryItems;\n","import classNames from 'classnames';\nimport React, { Component, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { ShopperCurrency } from '../currency';\n\nexport interface OrderSummaryPriceProps {\n    label: ReactNode;\n    amount?: number | null;\n    zeroLabel?: ReactNode;\n    className?: string;\n    testId?: string;\n    currencyCode?: string;\n    superscript?: string;\n    actionLabel?: ReactNode;\n    onActionTriggered?(): void;\n}\n\nexport interface OrderSummaryPriceState {\n    highlight: boolean;\n    previousAmount?: number;\n}\n\nfunction getDisplayValue(amount?: number | null, zeroLabel?: ReactNode): ReactNode | number {\n    const notYetSetSymbol = '--';\n\n    if (typeof amount === 'undefined' || amount === null) {\n        return notYetSetSymbol;\n    }\n\n    if (zeroLabel && amount === 0) {\n        return zeroLabel;\n    }\n\n    return amount;\n}\n\nfunction isNumberValue(displayValue: number | ReactNode): displayValue is number {\n    return typeof displayValue === 'number';\n}\n\nclass OrderSummaryPrice extends Component<OrderSummaryPriceProps, OrderSummaryPriceState> {\n    static getDerivedStateFromProps(props: OrderSummaryPriceProps, state: OrderSummaryPriceState) {\n        return {\n            highlight: props.amount !== state.previousAmount,\n            previousAmount: props.amount,\n        };\n    }\n\n    state = {\n        highlight: false,\n        previousAmount: 0,\n    };\n\n    render(): ReactNode {\n        const {\n            amount,\n            actionLabel,\n            onActionTriggered,\n            children,\n            className,\n            currencyCode,\n            label,\n            superscript,\n            testId,\n            zeroLabel,\n        } = this.props;\n\n        const { highlight } = this.state;\n        const displayValue = getDisplayValue(amount, zeroLabel);\n\n        return (\n            <div data-test={testId}>\n                <CSSTransition\n                    addEndListener={this.handleTransitionEnd}\n                    classNames=\"changeHighlight\"\n                    in={highlight}\n                    timeout={{}}\n                >\n                    <div\n                        aria-live=\"polite\"\n                        className={classNames(\n                            'cart-priceItem',\n                            'optimizedCheckout-contentPrimary',\n                            className,\n                        )}\n                    >\n                        <span className=\"cart-priceItem-label\">\n                            <span data-test=\"cart-price-label\">\n                                {label}\n                                {'  '}\n                            </span>\n                            {currencyCode && (\n                                <span className=\"cart-priceItem-currencyCode\">\n                                    {`(${currencyCode}) `}\n                                </span>\n                            )}\n                            {onActionTriggered && actionLabel && (\n                                <span className=\"cart-priceItem-link\">\n                                    <a\n                                        data-test=\"cart-price-callback\"\n                                        href=\"#\"\n                                        onClick={preventDefault(onActionTriggered)}\n                                    >\n                                        {actionLabel}\n                                    </a>\n                                </span>\n                            )}\n                        </span>\n\n                        <span className=\"cart-priceItem-value\">\n                            <span data-test=\"cart-price-value\">\n                                {isNumberValue(displayValue) ? (\n                                    <ShopperCurrency amount={displayValue} />\n                                ) : (\n                                    displayValue\n                                )}\n                            </span>\n\n                            {superscript && (\n                                <sup data-test=\"cart-price-value-superscript\">{superscript}</sup>\n                            )}\n                        </span>\n\n                        {children}\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        const { previousAmount } = this.state;\n\n        node.addEventListener('animationend', ({ target }) => {\n            if (target === node) {\n                this.setState({\n                    highlight: false,\n                    previousAmount,\n                });\n                done();\n            }\n        });\n    };\n}\n\nexport default OrderSummaryPrice;\n","import React, { FunctionComponent } from 'react';\n\nconst OrderSummarySection: FunctionComponent = ({ children }) => (\n    <section className=\"cart-section optimizedCheckout-orderSummary-cartSection\">\n        {children}\n    </section>\n);\n\nexport default OrderSummarySection;\n","import React from \"react\";\n\nexport function AutoshipDiscount({discountAmount}: {\n  discountAmount: number\n}) {\n  return <div\n    aria-live=\"polite\"\n    className=\"cart-priceItem optimizedCheckout-contentPrimary\"\n    style={{\n      marginTop: '-0.75rem',\n      fontStyle: \"italic\",\n      fontSize: \"0.8em\",\n      display: \"flex\",\n      alignItems: \"center\"\n    }}>\n\n    <svg fill=\"none\" height=\"23\" style={{\n      height: 16,\n      marginRight: 4\n    }} viewBox=\"0 0 22 23\" width=\"22\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path clipRule=\"evenodd\" d=\"M21.9999 15.3159L18.2055 9.89996L14.411 15.3159H16.5382C15.9625 17.9514 13.7648 19.9134 11.1415 19.9134C8.47838 19.9134 6.25385 17.8915 5.71966 15.1955H2.90625C3.47167 19.5483 6.94327 22.8981 11.1415 22.8981C15.3009 22.8981 18.7471 19.6099 19.3603 15.3159H21.9999Z\" fill=\"#B38EB0\" fillRule=\"evenodd\"/>\n      <path clipRule=\"evenodd\" d=\"M3.43323e-05 8.5326L3.79896 13.9549L7.59789 8.5326H5.46816C6.04453 5.89395 8.24487 3.92968 10.8713 3.92968C13.5375 3.92968 15.7647 5.95397 16.2995 8.6531H19.1162C18.5501 4.29519 15.0744 0.941397 10.8713 0.941397C6.70694 0.941397 3.2567 4.23352 2.64277 8.5326H3.43323e-05Z\" fill=\"#681E61\" fillRule=\"evenodd\"/>\n    </svg>\n\n    <div>Includes Autoship savings of <span style={{\n      fontWeight: \"bold\",\n      color: \"#8D2323\"\n    }}>${discountAmount.toFixed(2)}</span></div>\n  </div>;\n}\n\n\n","import { Fee, OrderFee } from \"@bigcommerce/checkout-sdk\";\n\nexport default function isOrderFee(fee: OrderFee | Fee): fee is OrderFee {\n  return Object.hasOwn(fee, 'customerDisplayName');\n};\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { ShopperCurrency } from '../currency';\n\nimport OrderSummaryPrice, { OrderSummaryPriceProps } from './OrderSummaryPrice';\n\nexport interface OrderSummaryDiscountProps extends OrderSummaryPriceProps {\n    remaining?: number;\n    code?: string;\n    onRemoved?(code: string): void;\n}\n\nconst OrderSummaryDiscount: FunctionComponent<OrderSummaryDiscountProps> = ({\n    code,\n    remaining,\n    amount,\n    onRemoved,\n    ...rest\n}) => (\n    <OrderSummaryPrice\n        {...rest}\n        {...(onRemoved && {\n            onActionTriggered: () => code && onRemoved(code),\n            actionLabel: <TranslatedString id=\"cart.remove_action\" />,\n        })}\n        amount={-1 * (amount || 0)}\n    >\n        {!!remaining && remaining > 0 && (\n            <span\n                className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n                data-test=\"cart-price-remaining\"\n            >\n                <TranslatedString id=\"cart.remaining_text\" />\n                {': '}\n                <ShopperCurrency amount={remaining} />\n            </span>\n        )}\n\n        {code && (\n            <span\n                className=\"cart-priceItem-postFix optimizedCheckout-contentSecondary\"\n                data-test=\"cart-price-code\"\n            >\n                {code}\n            </span>\n        )}\n    </OrderSummaryPrice>\n);\n\nexport default memo(OrderSummaryDiscount);\n","import {Coupon, Fee, GiftCertificate, OrderFee, Tax} from '@bigcommerce/checkout-sdk';\nimport React, {FunctionComponent, memo} from 'react';\n\nimport {TranslatedString} from '@bigcommerce/checkout/locale';\n\nimport {AutoshipDiscount} from \"./AutoshipDiscount\";\nimport isOrderFee from \"./isOrderFee\";\nimport OrderSummaryDiscount from './OrderSummaryDiscount';\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummarySubtotalsProps {\n    coupons: Coupon[];\n    giftCertificates?: GiftCertificate[];\n    discountAmount?: number;\n    isTaxIncluded?: boolean;\n    taxes?: Tax[];\n    fees?: Fee[] | OrderFee[];\n    giftWrappingAmount?: number;\n    isUpdatedCartSummayModal?: boolean,\n    shippingAmount?: number;\n    handlingAmount?: number;\n    storeCreditAmount?: number;\n    subtotalAmount: number;\n    onRemovedGiftCertificate?(code: string): void;\n    onRemovedCoupon?(code: string): void;\n    autoshipDiscount?: number;\n}\n\nconst OrderSummarySubtotals: FunctionComponent<OrderSummarySubtotalsProps> = ({\n    discountAmount,\n    isTaxIncluded,\n    giftCertificates,\n    taxes,\n    fees,\n    giftWrappingAmount,\n    shippingAmount,\n    subtotalAmount,\n    handlingAmount,\n    storeCreditAmount,\n    coupons,\n    onRemovedGiftCertificate,\n    onRemovedCoupon,\n    autoshipDiscount\n}) => {\n    return (\n        <>\n            <OrderSummaryPrice\n                amount={subtotalAmount}\n                className=\"cart-priceItem--subtotal\"\n                label={<TranslatedString id=\"cart.subtotal_text\" />}\n                testId=\"cart-subtotal\"\n            />\n\n            {!!autoshipDiscount ? (\n              <AutoshipDiscount discountAmount={autoshipDiscount}/>) : null}\n\n            {(coupons || []).map((coupon, index) => (\n                <OrderSummaryDiscount\n                    amount={coupon.discountedAmount}\n                    code={coupon.code}\n                    key={index}\n                    label={coupon.displayName}\n                    onRemoved={onRemovedCoupon}\n                    testId=\"cart-coupon\"\n                />\n            ))}\n\n            {!!discountAmount && (\n                <OrderSummaryDiscount\n                    amount={discountAmount}\n                    label={<TranslatedString id=\"cart.discount_text\" />}\n                    testId=\"cart-discount\"\n                />\n            )}\n\n            {(giftCertificates || []).map((giftCertificate, index) => (\n                <OrderSummaryDiscount\n                    amount={giftCertificate.used}\n                    code={giftCertificate.code}\n                    key={index}\n                    label={<TranslatedString id=\"cart.gift_certificate_text\" />}\n                    onRemoved={onRemovedGiftCertificate}\n                    remaining={giftCertificate.remaining}\n                    testId=\"cart-gift-certificate\"\n                />\n            ))}\n\n            {!!giftWrappingAmount && (\n                <OrderSummaryPrice\n                    amount={giftWrappingAmount}\n                    label={<TranslatedString id=\"cart.gift_wrapping_text\" />}\n                    testId=\"cart-gift-wrapping\"\n                />\n            )}\n\n            <OrderSummaryPrice\n                amount={shippingAmount}\n                label={<TranslatedString id=\"cart.shipping_text\" />}\n                testId=\"cart-shipping\"\n                zeroLabel={<TranslatedString id=\"cart.free_text\" />}\n            />\n\n            {!!handlingAmount && (\n                <OrderSummaryPrice\n                    amount={handlingAmount}\n                    label={<TranslatedString id=\"cart.handling_text\" />}\n                    testId=\"cart-handling\"\n                />\n            )}\n\n            {fees?.map((fee, index) => (\n                <OrderSummaryPrice\n                    amount={fee.cost}\n                    key={index}\n                    label={isOrderFee(fee) ? fee.customerDisplayName : fee.displayName}\n                    testId=\"cart-fees\"\n                />\n            ))}\n\n            {!isTaxIncluded && (taxes || []).map((tax, index) => (\n                <OrderSummaryPrice\n                    amount={tax.amount}\n                    key={index}\n                    label={tax.name}\n                    testId=\"cart-taxes\"\n                />\n            ))}\n\n            {!!storeCreditAmount && (\n                <OrderSummaryDiscount\n                    amount={storeCreditAmount}\n                    label={<TranslatedString id=\"cart.store_credit_text\" />}\n                    testId=\"cart-store-credit\"\n                />\n            )}\n        </>\n    );\n};\n\nexport default memo(OrderSummarySubtotals);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString, withCurrency, WithCurrencyProps } from '@bigcommerce/checkout/locale';\n\nimport OrderSummaryPrice from './OrderSummaryPrice';\n\nexport interface OrderSummaryTotalProps {\n    orderAmount: number;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderSummaryTotal: FunctionComponent<OrderSummaryTotalProps & WithCurrencyProps> = ({\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    orderAmount,\n    currency,\n}) => {\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const label = (\n        <>\n            {hasDifferentCurrency ? (\n                <TranslatedString id=\"cart.estimated_total_text\" />\n            ) : (\n                <TranslatedString id=\"cart.total_text\" />\n            )}\n            {` (${shopperCurrencyCode})`}\n        </>\n    );\n\n    return (\n        <>\n            <OrderSummaryPrice\n                amount={orderAmount}\n                className=\"cart-priceItem--total\"\n                label={label}\n                superscript={hasDifferentCurrency ? '*' : undefined}\n                testId=\"cart-total\"\n            />\n            {hasDifferentCurrency && currency && (\n                <p className=\"cart-priceItem--totalNote\" data-test=\"cart-price-item-total-note\">\n                    <TranslatedString\n                        data={{\n                            total: currency.toStoreCurrency(orderAmount),\n                            code: storeCurrencyCode,\n                        }}\n                        id=\"cart.billed_amount_text\"\n                    />\n                </p>\n            )}\n        </>\n    );\n};\n\nexport default withCurrency(OrderSummaryTotal);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    const totalItemsCount = [...physicalItems, ...digitalItems, ...(customItems || [])].reduce(\n        (total, item) => (total += item.quantity),\n        0,\n    );\n\n    return totalItemsCount + giftCertificates.length;\n}\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function removeBundledItems(lineItems: LineItemMap): LineItemMap {\n    return {\n        ...lineItems,\n        physicalItems: lineItems.physicalItems.filter((item) => typeof item.parentId !== 'string'),\n        digitalItems: lineItems.digitalItems.filter((item) => typeof item.parentId !== 'string'),\n    };\n}\n","import React, { FunctionComponent } from 'react';\n\nconst IconGiftCertificate: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M20 6h-2.18c.11-.31.18-.65.18-1a2.996 2.996 0 0 0-5.5-1.65l-.5.67-.5-.68C10.96 2.54 10.05 2 9 2 7.34 2 6 3.34 6 5c0 .35.07.69.18 1H4c-1.11 0-1.99.89-1.99 2L2 19c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm-5-2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM9 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm11 15H4v-2h16v2zm0-5H4V8h5.08L7 10.83 8.62 12 11 8.76l1-1.36 1 1.36L15.38 12 17 10.83 14.92 8H20v6z\" />\n    </svg>\n);\n\nexport default IconGiftCertificate;\n","import { SMALL_SCREEN_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isSmallScreen() {\n    query = window.matchMedia(`(max-width: ${SMALL_SCREEN_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n"],"names":["height","viewBox","width","xmlns","d","item","id","quantity","amount","extendedListPrice","name","getOrderSummaryItemImage","imageUrl","alt","src","getDigitalItemDescription","downloadPageUrl","testId","content","href","rel","target","TranslatedString","amountAfterDiscount","extendedSalePrice","image","productOptions","options","map","option","value","className","IconGiftCertificate","extendedComparisonPrice","description","giftWrapping","undefined","memo","length","index","key","isNumber","ShopperCurrency","props","handleToggle","isExpanded","state","setState","collapsedLimit","getCollapsedLimit","render","this","displayLineItemsCount","items","data","count","getItemsCount","physicalItems","slice","sort","variantId","giftCertificates","digitalItems","customItems","summaryItemProps","renderActions","isSmallScreen","getLineItemCount","onClick","type","IconChevronDown","highlight","previousAmount","handleTransitionEnd","node","done","addEventListener","getDerivedStateFromProps","actionLabel","onActionTriggered","children","currencyCode","label","superscript","zeroLabel","displayValue","getDisplayValue","CSSTransition","addEndListener","classNames","in","timeout","isNumberValue","Component","AutoshipDiscount","discountAmount","style","marginTop","fontStyle","fontSize","display","alignItems","fill","marginRight","clipRule","fillRule","fontWeight","color","toFixed","isOrderFee","fee","Object","hasOwn","code","remaining","onRemoved","rest","OrderSummaryPrice","isTaxIncluded","taxes","fees","giftWrappingAmount","shippingAmount","subtotalAmount","handlingAmount","storeCreditAmount","coupons","onRemovedGiftCertificate","onRemovedCoupon","autoshipDiscount","coupon","discountedAmount","displayName","giftCertificate","used","cost","customerDisplayName","tax","shopperCurrencyCode","storeCurrencyCode","orderAmount","currency","hasDifferentCurrency","total","toStoreCurrency","reduce","removeBundledItems","lineItems","filter","parentId","window","matchMedia","matches"],"sourceRoot":""}